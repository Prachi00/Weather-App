{"version":3,"sources":["Containers/Dashboard/Dashboard.module.scss","Components/Search/Search.module.scss","Components/Loader/Loader.module.scss","Components/Chart/Chart.module.scss","Images/pin.svg","Images/search.svg","Pipes/datePipe.js","Components/Search/Search.js","Hooks/useClickOutside.js","Components/Loader/Loader.js","Components/Chart/Chart.js","Containers/Dashboard/Dashboard.jsx","App.jsx","serviceWorker.js","index.jsx"],"names":["module","exports","getTime","dateValue","toLocaleString","hour","minute","hour12","getDay","param","days","Date","Search","props","ref","handler","useState","searchRes","SetSearchRes","defaultVal","val","setVal","dropdownRef","useRef","useEffect","listener","event","current","contains","target","document","addEventListener","removeEventListener","className","classes","search","value","type","search__input","onChange","e","length","weatherApi","process","fetch","then","response","json","searchData","list","item","push","lat","coord","lon","name","temp","Math","ceil","main","icon","weather","desc","src","pinIcon","alt","search__pin","searchIcon","search__searchIcon","search__dropdown","map","index","key","search__dropdown__res","onClick","getSearchData","search__dropdown__info","search__dropdown__info__temp","search__dropdown__info__desc","dashboard__forecast__image","Loader","parent","loader","ChartMap","ctx","getElementById","Chart","data","labels","label","datasets","backgroundColor","borderColor","pointBackgroundColor","pointBorderColor","borderWidth","options","legend","display","scales","yAxes","ticks","padding","createChart","chart","chart__child","id","height","width","Dashboard","forecastObj","setCurrent","setHour","chartsData","setChartsData","daily","setDaily","selected","setSelected","setName","setLoader","coords","setCoords","getWeatherData","forecastData","slice","dayOfWeek","dt","day","min","max","error","getForecastDetail","success","position","localStorage","setItem","latitude","longitude","getCityName","removeItem","alert","navigator","geolocation","getCurrentPosition","enableHighAccuracy","timeout","maximumAge","curr","forecastArr","city","getForecastForDay","first","charts","hourData","time","Fragment","dashboard","dashboard__parent","dashboard__forecast","dashboard__forecast__container","dashboard__forecast__container__active","dashboard__forecast__temp","dashboard__forecast__min","dashboard__forecast__desc","dashboard__card","dashboard__current","dashboard__current__info","dashboard__current__temp","dashboard__extra","dashboard__extra__option","dashboard__extra__option__label","pressure","humidity","dashboard__extra__sun","dashboard__extra__sun__time","sunrise","sunset","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","serviceWorker","ready","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.1138a59f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dashboard\":\"Dashboard_dashboard__3p6rc\",\"dashboard__parent\":\"Dashboard_dashboard__parent__2SIIX\",\"dashboard__card\":\"Dashboard_dashboard__card__1dFN6\",\"dashboard__forecast\":\"Dashboard_dashboard__forecast__3TzD9\",\"dashboard__forecast__container\":\"Dashboard_dashboard__forecast__container__aMGu9\",\"dashboard__forecast__container__active\":\"Dashboard_dashboard__forecast__container__active__dKeUO\",\"dashboard__forecast__desc\":\"Dashboard_dashboard__forecast__desc__3sfyI\",\"dashboard__forecast__image\":\"Dashboard_dashboard__forecast__image__2kC0d\",\"dashboard__forecast__min\":\"Dashboard_dashboard__forecast__min__Dw5Q4\",\"dashboard__forecast__temp\":\"Dashboard_dashboard__forecast__temp__Omsjf\",\"dashboard__current\":\"Dashboard_dashboard__current__2Z6R5\",\"dashboard__current__info\":\"Dashboard_dashboard__current__info__29HBR\",\"dashboard__current__temp\":\"Dashboard_dashboard__current__temp__EDrkS\",\"dashboard__current__hourly\":\"Dashboard_dashboard__current__hourly__2NVls\",\"dashboard__extra\":\"Dashboard_dashboard__extra__2HPK9\",\"dashboard__extra__option\":\"Dashboard_dashboard__extra__option__3LmMj\",\"dashboard__extra__option__label\":\"Dashboard_dashboard__extra__option__label__3GTcs\",\"dashboard__extra__sun\":\"Dashboard_dashboard__extra__sun__Cg533\",\"dashboard__extra__sun__time\":\"Dashboard_dashboard__extra__sun__time__1ImyO\",\"dashboard__hourly\":\"Dashboard_dashboard__hourly__3Ty4x\",\"dashboard__hourly__time\":\"Dashboard_dashboard__hourly__time__39pHa\",\"dashboard__hourly__temp\":\"Dashboard_dashboard__hourly__temp__1CGCc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"search\":\"Search_search__1Zpx3\",\"search__pin\":\"Search_search__pin__33VVI\",\"search__searchIcon\":\"Search_search__searchIcon__3olLa\",\"search__input\":\"Search_search__input__30Muk\",\"search__dropdown\":\"Search_search__dropdown__2cuNi\",\"search__dropdown__res\":\"Search_search__dropdown__res__1wapI\",\"search__dropdown__info\":\"Search_search__dropdown__info__1geHT\",\"search__dropdown__info__temp\":\"Search_search__dropdown__info__temp__28llL\",\"search__dropdown__info__desc\":\"Search_search__dropdown__info__desc__1qriv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"parent\":\"Loader_parent__1lNZR\",\"loader\":\"Loader_loader__1KZeC\",\"load6\":\"Loader_load6__3L2lF\",\"round\":\"Loader_round__38bTK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"chart\":\"Chart_chart__2n35j\",\"chart__child\":\"Chart_chart__child__2QxDw\"};","module.exports = __webpack_public_path__ + \"static/media/pin.e9ac59a8.svg\";","module.exports = __webpack_public_path__ + \"static/media/search.744d54d4.svg\";","export const getTime = (dateValue) => {\n  /* transforms timestamp into AM/PM format */\n  return dateValue.toLocaleString(\"en-US\", {\n    hour: \"numeric\",\n    minute: \"numeric\",\n    hour12: true,\n  });\n};\n\nexport const getDay = (param) => {\n  /* get day from timestamp */\n  let days = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thur\", \"Fri\", \"Sat\"];\n  if (param) {\n    let date = new Date(param * 1000);\n    return days[date.getDay()];\n  } else {\n    return days[new Date().getDay()];\n  }\n};\n","import classes from \"./Search.module.scss\";\nimport React, { useState, useRef } from \"react\";\nimport pinIcon from \"../../Images/pin.svg\";\nimport searchIcon from \"../../Images/search.svg\";\nimport { useClickOutside } from \"../../Hooks/useClickOutside\";\n\nconst Search = (props) => {\n  let [searchRes, SetSearchRes] = useState([]);\n  let [val, setVal] = useState(props.defaultVal);\n  const dropdownRef = useRef(null);\n  useClickOutside(dropdownRef, () => {\n    /* when clicked outside the dropdown, close the dropdown  */\n    SetSearchRes([]);\n    setVal(\"\");\n  });\n\n  const search = (e) => {\n    setVal(e.target.value);\n    if (!e.target.value.length) {\n      SetSearchRes([]);\n    }\n    if (e.target.value.length > 3) {\n      const weatherApi = `https://api.openweathermap.org/data/2.5/find?q=${e.target.value}&cnt=10&units=metric&appid=${process.env.REACT_APP_API_KEY}`;\n\n      fetch(weatherApi)\n        .then((response) => response.json())\n        .then((response) => {\n          let searchData = [];\n          for (const item of response.list) {\n            searchData.push({\n              lat: item.coord.lat,\n              lon: item.coord.lon,\n              name: item.name,\n              temp: Math.ceil(item.main.temp),\n              icon: item.weather[0].icon,\n              desc: item.weather[0].main,\n            });\n          }\n          SetSearchRes(searchData);\n        });\n    }\n  };\n\n  const searchData = (lat, lon) => {\n    props.getSearchData(lat, lon);\n    SetSearchRes([]);\n  };\n\n  return (\n    <div className={classes.search} ref={dropdownRef}>\n      <input\n        value={val}\n        type=\"text\"\n        className={classes.search__input}\n        onChange={search}\n      />\n      <img src={pinIcon} alt=\"\" className={classes.search__pin} />\n      <img src={searchIcon} alt=\"\" className={classes.search__searchIcon} />\n      {searchRes.length ? (\n        <div className={classes.search__dropdown}>\n          {searchRes.map((item, index) => {\n            return (\n              <div\n                key={index}\n                className={classes.search__dropdown__res}\n                onClick={() => searchData(item.lat, item.lon)}\n              >\n                <span>{item.name}</span>\n                <div className={classes.search__dropdown__info}>\n                  <div className={classes.search__dropdown__info__temp}>\n                    <span>{item.temp}&#8451;</span>\n                    <span className={classes.search__dropdown__info__desc}>\n                      {item.desc}\n                    </span>\n                  </div>\n                  <div>\n                    <img\n                      className={classes.dashboard__forecast__image}\n                      src={`https://openweathermap.org/img/wn/${item.icon}.png`}\n                      alt=\"\"\n                    />\n                  </div>\n                </div>\n              </div>\n            );\n          })}\n        </div>\n      ) : null}\n    </div>\n  );\n};\n\nexport default Search;\n","import { useEffect } from 'react';\n\nexport const useClickOutside = (\n  ref,\n  handler\n) => {\n  useEffect(\n    () => {\n      const listener = (event) => {\n        // Do nothing if clicking ref's element or descendent elements\n        if (!ref.current || ref.current.contains(event.target)) {\n          return;\n        }\n\n        handler(event);\n      };\n\n      document.addEventListener('mousedown', listener);\n      document.addEventListener('touchstart', listener);\n\n      return () => {\n        document.removeEventListener('mousedown', listener);\n        document.removeEventListener('touchstart', listener);\n      };\n    },\n    // Add ref and handler to effect dependencies\n    // It's worth noting that because passed in handler is a new ...\n    // ... function on every render that will cause this effect ...\n    // ... callback/cleanup to run every render. It's not a big deal ...\n    // ... but to optimize you can wrap handler in useCallback before ...\n    // ... passing it into this hook.\n    [ref, handler]\n  );\n};\n","import classes from \"./Loader.module.scss\";\nimport React from \"react\";\n\nconst Loader = (props) => {\n  return (\n      <div className={classes.parent}>\n\n          <div className={classes.loader}>Loading...</div>\n      </div>\n  )\n};\n\nexport default Loader;\n","import React, { useEffect } from \"react\";\nimport classes from \"./Chart.module.scss\";\nimport Chart from \"chart.js\";\nexport default function ChartMap(props) {\n  const createChart = () => {\n    let ctx = document.getElementById(\"myChart\");\n    new Chart(ctx, {\n      type: \"line\",\n      data: {\n        labels: props.label, //data that is shown below\n        datasets: [\n          {\n            label: \"Temperature\",\n            data: props.data, //data mapped with blue lines\n            backgroundColor: \"rgba(255,255,255,0.1)\",\n            borderColor: \"rgba(54, 162, 235)\",\n            pointBackgroundColor: \"rgba(54, 162, 235, 1)\",\n            pointBorderColor: \"rgba(54, 162, 235, 1)\",\n            borderWidth: 2,\n          },\n        ],\n      },\n      options: {\n        legend: {\n          display: false,\n        },\n        scales: {\n          yAxes: [\n            {\n              ticks: {\n                padding: 100,\n              },\n              display: false,\n            },\n          ],\n        },\n      },\n    });\n  };\n  useEffect(() => {\n    createChart();\n  });\n  return (\n    <div className={classes.chart}>\n      <div className={classes.chart__child}>\n        <canvas id=\"myChart\" height=\"280\" width=\"0\"></canvas>\n      </div>\n    </div>\n  );\n}\n","import classes from \"./Dashboard.module.scss\";\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { getTime, getDay } from \"../../Pipes/datePipe\";\nimport Search from \"../../Components/Search/Search\";\nimport Loader from \"../../Components/Loader/Loader\";\nimport ChartMap from \"../../Components/Chart/Chart\";\n\n\nconst Dashboard = () => {\n  let forecastObj = useRef({});\n  let [current, setCurrent] = useState();\n  let [hour, setHour] = useState([]);\n  let [chartsData, setChartsData] = useState([]);\n  let [daily, setDaily] = useState([]);\n  let [selected, setSelected] = useState([]);\n  let [name, setName] = useState([]);\n  let [loader, setLoader] = useState(true);\n  let [coords, setCoords] = useState({});\n  const getWeatherData = (lat, lon) => {\n    let weatherApi;\n\n    weatherApi = `https://api.openweathermap.org/data/2.5/onecall?lat=${lat}&lon=${lon}&units=metric&appid=${process.env.REACT_APP_API_KEY}`;\n\n    fetch(weatherApi)\n      .then((response) => response.json())\n      .then(\n        (response) => {\n          setLoader(false);\n          setCurrent(response.current);\n          let forecastData = [];\n          for (const item of response.daily.slice(0, 6)) {\n            let dayOfWeek = getDay(item.dt);\n            forecastData.push({\n              day: dayOfWeek,\n              dt: item.dt,\n              min: Math.ceil(item.temp.min),\n              max: Math.ceil(item.temp.max),\n              icon: item.weather[0].icon,\n              desc: item.weather[0].main,\n            });\n          }\n          setDaily(forecastData);\n          /* by default 0th is selected */\n          setSelected(forecastData[0]);\n        },\n        (error) => {}\n      );\n  };\n\n  useEffect(() => {\n    if (daily.length) {\n      getForecastDetail();\n    }\n  }, [daily]);\n\n  const getCityName = (lat, lon) => {\n    let weatherApi;\n\n    weatherApi = `https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lon}&units=metric&appid=${process.env.REACT_APP_API_KEY}`;\n\n    fetch(weatherApi)\n      .then((response) => response.json())\n      .then((response) => {\n        setName(response.name);\n      });\n  };\n  const success = (position) => {\n    localStorage.setItem(\"location-allowed\", true);\n    setCoords({\n      lat: position.coords.latitude,\n      lon: position.coords.longitude,\n    });\n    getCityName(position.coords.latitude, position.coords.longitude);\n    getWeatherData(position.coords.latitude, position.coords.longitude);\n  };\n\n  const error = () => {\n    localStorage.removeItem(\"location-allowed\");\n    alert(\"Unable to retrieve location.\");\n  };\n\n  useEffect(() => {\n    let options = {\n      enableHighAccuracy: true,\n      timeout: 10000,\n      maximumAge: 0,\n    };\n\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(success, error, options);\n    } else {\n      alert(\n        \"Your browser does not support location tracking, or permission is denied.\"\n      );\n    }\n  }, []);\n\n  const getSearchData = (lat, lon) => {\n    getWeatherData(lat, lon);\n    setCoords({\n      lat: lat,\n      lon: lon,\n    });\n  };\n\n  const getForecastDetail = () => {\n    let weatherApi;\n    weatherApi = `https://api.openweathermap.org/data/2.5/forecast?lat=${coords.lat}&lon=${coords.lon}&units=metric&appid=${process.env.REACT_APP_API_KEY}`;\n    fetch(weatherApi)\n      .then((response) => response.json())\n      .then((response) => {\n        let forecastArr = [];\n        let curr;\n        for (const item of response.list) {\n          curr = getDay(item.dt);\n\n          if (forecastObj.current && !forecastObj.current[curr]) {\n            forecastArr = [];\n          }\n          forecastArr.push({ ...item, ...response.city });\n          forecastObj.current[curr] = forecastArr;\n          setCurrent({\n            ...forecastObj.current[curr][0],\n            ...forecastObj.current[curr][0].main,\n            ...response.city,\n          });\n        }\n        getForecastForDay(daily[0], true);\n      });\n  };\n\n  const getForecastForDay = (item, first) => {\n    setSelected(item);\n    let charts = [];\n    let hourData = [];\n    if (!first) {\n      setCurrent({\n        ...forecastObj.current[item.day][0],\n        ...forecastObj.current[item.day][0].main,\n      });\n    }\n    for (const data of forecastObj.current[item.day]) {\n      charts.push(data.main.temp);\n      let time = getTime(new Date(data.dt * 1000));\n      hourData.push([`${Math.ceil(data.main.temp)}°C`, time]);\n    }\n    setChartsData(charts);\n    setHour(hourData);\n  };\n\n  return (\n    <React.Fragment>\n      {loader ? (\n        <Loader />\n      ) : (\n        <div className={classes.dashboard}>\n          <div className={classes.dashboard__parent}>\n            <Search getSearchData={getSearchData} defaultVal={name} />\n            <div className={classes.dashboard__forecast}>\n              {daily.map((item, index) => {\n                return (\n                  <div\n                    key={index}\n                    className={`${classes.dashboard__forecast__container} ${\n                      item === selected\n                        ? `${classes.dashboard__forecast__container__active}`\n                        : \"\"\n                    }`}\n                    onClick={() => getForecastForDay(item)}\n                  >\n                    <span>{item.day}</span>\n                    <div>\n                      <span className={classes.dashboard__forecast__temp}>\n                        {item.max}&#176;\n                      </span>\n                      <span className={classes.dashboard__forecast__min}>\n                        {item.min}&#176;\n                      </span>\n                    </div>\n                    <img\n                      className={classes.dashboard__forecast__image}\n                      src={`https://openweathermap.org/img/wn/${item.icon}.png`}\n                      alt=\"\"\n                    />\n                    <span className={classes.dashboard__forecast__desc}>\n                      {item.desc}\n                    </span>\n                  </div>\n                );\n              })}\n            </div>\n            <div className={classes.dashboard__card}>\n              {current && current.weather ? (\n                <div className={classes.dashboard__current}>\n                  <div className={classes.dashboard__current__info}>\n                    <span className={classes.dashboard__current__temp}>\n                      {Math.ceil(current.temp)}&#8451;\n                    </span>\n                    <img\n                      src={`https://openweathermap.org/img/wn/${current?.weather[0].icon}@2x.png`}\n                      alt=\"\"\n                    />\n                  </div>\n                  {hour.length && chartsData.length ? (\n                    <ChartMap label={hour} data={chartsData} />\n                  ) : null}\n                  <div className={classes.dashboard__extra}>\n                    <div className={classes.dashboard__extra__option}>\n                      <span className={classes.dashboard__extra__option__label}>\n                        Pressure\n                      </span>\n                      <span>{current.pressure} hpa</span>\n                    </div>\n                    <div className={classes.dashboard__extra__option}>\n                      <span className={classes.dashboard__extra__option__label}>\n                        Humidity\n                      </span>\n                      <span>{current.humidity} %</span>\n                    </div>\n                  </div>\n                  <div className={classes.dashboard__extra}>\n                    <div className={classes.dashboard__extra__sun}>\n                      <span className={classes.dashboard__extra__option__label}>\n                        Sunrise\n                      </span>\n                      <span className={classes.dashboard__extra__sun__time}>\n                        {getTime(new Date(current.sunrise * 1000))}\n                      </span>\n                    </div>\n                    <div className={classes.dashboard__extra__sun}>\n                      <span className={classes.dashboard__extra__option__label}>\n                        Sunset\n                      </span>\n                      <span className={classes.dashboard__extra__sun__time}>\n                        {getTime(new Date(current.sunset * 1000))}\n                      </span>\n                    </div>\n                  </div>\n                </div>\n              ) : null}\n            </div>\n          </div>\n        </div>\n      )}\n    </React.Fragment>\n  );\n};\n\nexport default Dashboard;\n","import React from \"react\";\nimport \"./App.scss\";\nimport Dashboard from \"./Containers/Dashboard/Dashboard\";\nfunction App() {\n  return (\n    <div className=\"app\">\n      <Dashboard />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}